// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuanLyDuAn.AppDBContext;

#nullable disable

namespace QuanLyDuAn.Migrations
{
    [DbContext(typeof(MyDBContext))]
    [Migration("20250402013743_db")]
    partial class db
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QuanLyDuAn.Models.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f1beddad-df09-4c4e-be6b-44e886ffc7c6"),
                            Author = "Thích Nhất Hạnh",
                            Description = "MM",
                            ImagePath = "https://cdn1.fahasa.com/media/catalog/product/8/9/8935278607311.jpg",
                            Price = 470000m,
                            PublishedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 10,
                            Title = "Không diệt không sinh đừng sợ hãi"
                        },
                        new
                        {
                            Id = new Guid("841b6fe5-efb2-4efe-b94f-4da5cdcadd6c"),
                            Author = "Desmond Tutu, Douglas Abrams, Tenzin Gyatso",
                            Description = "MM",
                            ImagePath = "https://cdn1.fahasa.com/media/catalog/product/i/m/image_190558.jpg",
                            Price = 97500m,
                            PublishedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 10,
                            Title = "Hỷ lạc từ tâm"
                        },
                        new
                        {
                            Id = new Guid("68c25d7d-36a2-4a40-a4ce-6aa9df56e195"),
                            Author = "Nhiều Tác Giả",
                            Description = "MM",
                            ImagePath = "https://cdn1.fahasa.com/media/wysiwyg/HONG_KD/Frame_T4.png",
                            Price = 69000m,
                            PublishedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 10,
                            Title = "Dinh Dưỡng Cho Bệnh Nhân Ung Thư"
                        },
                        new
                        {
                            Id = new Guid("fa0672ea-27fc-4aa1-ae06-3718e661bdce"),
                            Author = "Kate Crawford",
                            Description = "MM",
                            ImagePath = "https://cdn1.fahasa.com/media/catalog/product/n/x/nxbtre_full_04012024_030139.jpg",
                            Price = 100000m,
                            PublishedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 10,
                            Title = "Bản Đồ AI "
                        },
                        new
                        {
                            Id = new Guid("ad06202f-fbf9-4e6c-96e6-700c20901228"),
                            Author = "Thích Nhất Hạnh",
                            Description = "MM",
                            ImagePath = "https://cdn1.fahasa.com/media/catalog/product/h/a/hanh-phuc-cam-tay---bia-1-_tb-2024_.jpg",
                            Price = 65000m,
                            PublishedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 10,
                            Title = "Hạnh Phúc Cầm Tay"
                        });
                });

            modelBuilder.Entity("QuanLyDuAn.Models.Cart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("QuanLyDuAn.Models.CartItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BookId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("CartId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("QuanLyDuAn.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("QuanLyDuAn.Models.Cart", b =>
                {
                    b.HasOne("QuanLyDuAn.Models.User", "User")
                        .WithOne("Cart")
                        .HasForeignKey("QuanLyDuAn.Models.Cart", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuanLyDuAn.Models.CartItem", b =>
                {
                    b.HasOne("QuanLyDuAn.Models.Book", "Book")
                        .WithMany("CartItems")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyDuAn.Models.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("QuanLyDuAn.Models.Book", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("QuanLyDuAn.Models.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("QuanLyDuAn.Models.User", b =>
                {
                    b.Navigation("Cart")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
